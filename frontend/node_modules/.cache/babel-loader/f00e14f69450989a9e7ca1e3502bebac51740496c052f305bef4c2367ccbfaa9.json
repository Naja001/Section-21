{"ast":null,"code":"var _jsxFileName = \"/Users/natalijaojdanic/Desktop/React kurs 24/Section 21/12-adv-starting-project/frontend/src/pages/EventsPage.js\",\n  _s = $RefreshSig$();\nimport { useLoaderData, json, defer } from \"react-router-dom\";\nimport EventsList from \"../components/EventsList\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction EventsPage() {\n  _s();\n  // const events = useLoaderData();\n  const data = useLoaderData();\n\n  // if(data.isError){\n  //   return <p>{data.message}</p>\n  // }\n  const events = data.events;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(EventsList, {\n      events: events\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(EventsPage, \"5thj+e1edPyRpKif1JmVRC6KArE=\", false, function () {\n  return [useLoaderData];\n});\n_c = EventsPage;\nexport default EventsPage;\nasync function loadEvents() {\n  const response = await fetch(\"http://localhost:8080/events\");\n  if (response.ok) {\n    // const resData = await response.json();\n    // return resData.events;\n    return response;\n  } else {\n    // return { isError: true, message: \"Could not fetch an event\" };\n    return json({\n      message: \"Could not fetch an event\"\n    }, {\n      status: 500\n    });\n  }\n}\nexport async function loader() {\n  defer({\n    events: loadEvents()\n  });\n}\nvar _c;\n$RefreshReg$(_c, \"EventsPage\");","map":{"version":3,"names":["useLoaderData","json","defer","EventsList","jsxDEV","_jsxDEV","Fragment","_Fragment","EventsPage","_s","data","events","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","loadEvents","response","fetch","ok","message","status","loader","$RefreshReg$"],"sources":["/Users/natalijaojdanic/Desktop/React kurs 24/Section 21/12-adv-starting-project/frontend/src/pages/EventsPage.js"],"sourcesContent":["import { useLoaderData, json , defer} from \"react-router-dom\";\n\nimport EventsList from \"../components/EventsList\";\n\nfunction EventsPage() {\n  // const events = useLoaderData();\n  const data = useLoaderData();\n\n  // if(data.isError){\n  //   return <p>{data.message}</p>\n  // }\n  const events = data.events;\n  return (\n    <>\n      <EventsList events={events} />\n    </>\n  );\n}\n\nexport default EventsPage;\n\nasync function loadEvents(){\n  const response = await fetch(\"http://localhost:8080/events\");\n\n  if (response.ok) {\n    // const resData = await response.json();\n    // return resData.events;\n    return response;\n  } else {\n    // return { isError: true, message: \"Could not fetch an event\" };\n    return json({ message: \"Could not fetch an event\" }, { status: 500 });\n  }\n}\n\nexport async function loader() {\n  defer({events:loadEvents()})\n}\n"],"mappings":";;AAAA,SAASA,aAAa,EAAEC,IAAI,EAAGC,KAAK,QAAO,kBAAkB;AAE7D,OAAOC,UAAU,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAElD,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACpB;EACA,MAAMC,IAAI,GAAGV,aAAa,CAAC,CAAC;;EAE5B;EACA;EACA;EACA,MAAMW,MAAM,GAAGD,IAAI,CAACC,MAAM;EAC1B,oBACEN,OAAA,CAAAE,SAAA;IAAAK,QAAA,eACEP,OAAA,CAACF,UAAU;MAACQ,MAAM,EAAEA;IAAO;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC,gBAC9B,CAAC;AAEP;AAACP,EAAA,CAbQD,UAAU;EAAA,QAEJR,aAAa;AAAA;AAAAiB,EAAA,GAFnBT,UAAU;AAenB,eAAeA,UAAU;AAEzB,eAAeU,UAAUA,CAAA,EAAE;EACzB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,CAAC;EAE5D,IAAID,QAAQ,CAACE,EAAE,EAAE;IACf;IACA;IACA,OAAOF,QAAQ;EACjB,CAAC,MAAM;IACL;IACA,OAAOlB,IAAI,CAAC;MAAEqB,OAAO,EAAE;IAA2B,CAAC,EAAE;MAAEC,MAAM,EAAE;IAAI,CAAC,CAAC;EACvE;AACF;AAEA,OAAO,eAAeC,MAAMA,CAAA,EAAG;EAC7BtB,KAAK,CAAC;IAACS,MAAM,EAACO,UAAU,CAAC;EAAC,CAAC,CAAC;AAC9B;AAAC,IAAAD,EAAA;AAAAQ,YAAA,CAAAR,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}