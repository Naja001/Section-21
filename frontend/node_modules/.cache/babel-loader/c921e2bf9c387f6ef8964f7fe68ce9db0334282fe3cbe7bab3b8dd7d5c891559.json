{"ast":null,"code":"var _jsxFileName = \"/Users/natalijaojdanic/Desktop/React kurs 24/Section 21/12-adv-starting-project/frontend/src/pages/EventsPage.js\",\n  _s = $RefreshSig$();\nimport { useLoaderData, json, defer, Await } from \"react-router-dom\";\n\n// import EventsList from \"../components/EventsList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EventsPage() {\n  _s();\n  // const events = useLoaderData();\n  const {\n    events\n  } = useLoaderData();\n\n  // if(data.isError){\n  //   return <p>{data.message}</p>\n  // }\n\n  return /*#__PURE__*/_jsxDEV(Await, {\n    resolve: events\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 7\n  }, this);\n}\n_s(EventsPage, \"22Av1LduzrZxSsk8kXUUCix36lQ=\", false, function () {\n  return [useLoaderData];\n});\n_c = EventsPage;\nexport default EventsPage;\nasync function loadEvents() {\n  const response = await fetch(\"http://localhost:8080/events\");\n  if (response.ok) {\n    // const resData = await response.json();\n    // return resData.events;\n    return response;\n  } else {\n    // return { isError: true, message: \"Could not fetch an event\" };\n    return json({\n      message: \"Could not fetch an event\"\n    }, {\n      status: 500\n    });\n  }\n}\nexport async function loader() {\n  return defer({\n    events: loadEvents()\n  });\n}\nvar _c;\n$RefreshReg$(_c, \"EventsPage\");","map":{"version":3,"names":["useLoaderData","json","defer","Await","jsxDEV","_jsxDEV","EventsPage","_s","events","resolve","fileName","_jsxFileName","lineNumber","columnNumber","_c","loadEvents","response","fetch","ok","message","status","loader","$RefreshReg$"],"sources":["/Users/natalijaojdanic/Desktop/React kurs 24/Section 21/12-adv-starting-project/frontend/src/pages/EventsPage.js"],"sourcesContent":["import { useLoaderData, json , defer, Await} from \"react-router-dom\";\n\n// import EventsList from \"../components/EventsList\";\n\nfunction EventsPage() {\n  // const events = useLoaderData();\n  const {events} = useLoaderData();\n\n  // if(data.isError){\n  //   return <p>{data.message}</p>\n  // }\n  \n  return (\n    \n      <Await resolve={events}>\n    </Await>\n  );\n}\n\nexport default EventsPage;\n\nasync function loadEvents(){\n  const response = await fetch(\"http://localhost:8080/events\");\n\n  if (response.ok) {\n    // const resData = await response.json();\n    // return resData.events;\n    return response;\n  } else {\n    // return { isError: true, message: \"Could not fetch an event\" };\n    return json({ message: \"Could not fetch an event\" }, { status: 500 });\n  }\n}\n\nexport async function loader() {\n  return defer({events:loadEvents()})\n}\n"],"mappings":";;AAAA,SAASA,aAAa,EAAEC,IAAI,EAAGC,KAAK,EAAEC,KAAK,QAAO,kBAAkB;;AAEpE;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACpB;EACA,MAAM;IAACC;EAAM,CAAC,GAAGR,aAAa,CAAC,CAAC;;EAEhC;EACA;EACA;;EAEA,oBAEIK,OAAA,CAACF,KAAK;IAACM,OAAO,EAAED;EAAO;IAAAE,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClB,CAAC;AAEZ;AAACN,EAAA,CAbQD,UAAU;EAAA,QAEAN,aAAa;AAAA;AAAAc,EAAA,GAFvBR,UAAU;AAenB,eAAeA,UAAU;AAEzB,eAAeS,UAAUA,CAAA,EAAE;EACzB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,CAAC;EAE5D,IAAID,QAAQ,CAACE,EAAE,EAAE;IACf;IACA;IACA,OAAOF,QAAQ;EACjB,CAAC,MAAM;IACL;IACA,OAAOf,IAAI,CAAC;MAAEkB,OAAO,EAAE;IAA2B,CAAC,EAAE;MAAEC,MAAM,EAAE;IAAI,CAAC,CAAC;EACvE;AACF;AAEA,OAAO,eAAeC,MAAMA,CAAA,EAAG;EAC7B,OAAOnB,KAAK,CAAC;IAACM,MAAM,EAACO,UAAU,CAAC;EAAC,CAAC,CAAC;AACrC;AAAC,IAAAD,EAAA;AAAAQ,YAAA,CAAAR,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}